ui_print("");
ui_print("");
ui_print("");
ui_print("================================");
ui_print("|Recovery Switcher              |");
ui_print("|By Flashalot                   |"); 
ui_print("|For One XL Evita only          |");
ui_print("================================");
ui_print("");
ui_print("");
ui_print("Installing BE PATIENT!");
########################Mounting System########################
set_progress(0.1);
ui_print("Begin Installation...");
set_progress(0.0);
assert(
    getprop("ro.product.device") == "evita"
);

ui_print("@INFORMATION  ");
run_program("/sbin/sleep", "2");
ifelse(
    getprop("ro.product.device") == "evita",
    (
	ui_print("-- Device: evita  /  HTC One XL");
	ui_print("-- Carrier: T-Mobile/ATT/Unbraned");
	ui_print("");
    )
);
set_progress(0.025);
ui_print("WARNING: PULL BATTERY OR HOLD DOWN POWER DOWN BUTTON");
ui_print("IF DEVICE IDENTIFIED IS WRONG - YOU HAVE 20 SECONDS");
ui_print("");
run_program("/sbin/sleep", "20");
set_progress(0.050);
ui_print("");
ui_print("");
##########################Installation##########################
ui_print("@Installing Recovery");
ui_print("");
ui_print("");
set_progress(0.10);
#########################Recoverys##########################
set_progress(0.54);
if
    file_getprop("/tmp/aroma-data/recovery.prop","item.1.1") == "1"
then
ui_print("@Installing Unofficial TWRP Recovery");
ui_print("Installing Unofficial TWRP Recovery");
package_extract_file("recovery/twrpun/recovery.img", "/tmp/recovery.img");
run_program("/sbin/busybox", "dd", "if=/tmp/recovery.img", "of=/dev/block/mmcblk0p22");
delete("/tmp/recovery.img");
endif;

set_progress(0.54);
if
    file_getprop("/tmp/aroma-data/recovery.prop","item.1.2") == "1"
then
ui_print("@Installing Official TWRP Recovery");
ui_print("Installing Official TWRP Recovery");
package_extract_file("recovery/twrp/recovery.img", "/tmp/recovery.img");
run_program("/sbin/busybox", "dd", "if=/tmp/recovery.img", "of=/dev/block/mmcblk0p22");
delete("/tmp/recovery.img");
endif;

set_progress(0.54);
if
    file_getprop("/tmp/aroma-data/recovery.prop","item.1.3") == "1"
then
ui_print("@Installing CWM Touch");
ui_print("Installing CWM Touch");
package_extract_file("recovery/cwm_touch/recovery.img", "/tmp/recovery.img");
run_program("/sbin/busybox", "dd", "if=/tmp/recovery.img", "of=/dev/block/mmcblk0p22");
delete("/tmp/recovery.img");
endif;

set_progress(0.54);
if
    file_getprop("/tmp/aroma-data/recovery.prop","item.1.4") == "1"
then
ui_print("@Installing CWM Non-Touch");
ui_print("Installing CWM Non-Touch");
package_extract_file("recovery/cwm_notouch/recovery.img", "/tmp/recovery.img");
run_program("/sbin/busybox", "dd", "if=/tmp/recovery.img", "of=/dev/block/mmcblk0p22");
delete("/tmp/recovery.img");
endif;

set_progress(0.54);
if
    file_getprop("/tmp/aroma-data/recovery.prop","item.1.5") == "1"
then
ui_print("@Installing PhilZ Touch Recovery");
ui_print("Installing PhilZ Touch Recovery");
package_extract_file("recovery/philz/recovery.img", "/tmp/recovery.img");
run_program("/sbin/busybox", "dd", "if=/tmp/recovery.img", "of=/dev/block/mmcblk0p22");
delete("/tmp/recovery.img");
endif;
##########################F2FS##########################
set_progress(0.54);
if
    file_getprop("/tmp/aroma-data/recovery.prop","item.2.1") == "1"
then
ui_print("@Installing Unofficial TWRP 2.7.1 Recovery For F2Fs");
ui_print("Unofficial TWRP 2.7.1 Recovery For F2Fs");
package_extract_file("f2fs/recovery/recovery.img", "/tmp/recovery.img");
run_program("/sbin/busybox", "dd", "if=/tmp/recovery.img", "of=/dev/block/mmcblk0p22");
delete("/tmp/recovery.img");
endif;

set_progress(0.54);
if
    file_getprop("/tmp/aroma-data/recovery.prop","item.2.2") == "1"
then
ui_print("F2FS fstab converter for Evita");
ui_print("@F2FS fstab converter for Evita");
ui_print("   By: jrior001       ");
ifelse(is_mounted("/system") == "/system", unmount("/system"));
ifelse(is_mounted("/cache") == "/cache", unmount("/cache"));
ui_print("..");
set_progress(0.1);

ui_print("Extracting files.....");
package_extract_dir("f2fs/conversion/kernel", "/tmp");
set_perm(0, 0, 0777, "/tmp/compatibility.sh");
set_perm(0, 0, 0777, "/tmp/mkbootimg.sh");
set_perm(0, 0, 0777, "/tmp/mkbootimg");
set_perm(0, 0, 0777, "/tmp/unpackbootimg");
set_perm(0, 0, 0777, "/tmp/modclean.sh");
set_perm(0, 0, 0777, "/tmp/edit_ramdisk.sh");
set_perm(0, 0, 0777, "/tmp/fstab.qcom.tmp");
set_progress(0.1);


ui_print("Mount partitions...");
run_program("/sbin/busybox", "mount", "/system");
run_program("/sbin/busybox", "mount", "/data");
run_program("/sbin/busybox", "mount", "/cache");
set_progress(0.2);

ui_print("Copying f2fs tools...");
package_extract_dir("system/conversion/system", "/system");
set_perm(0, 2000, 0755, "/system/bin/fsck.f2fs");
set_perm(0, 2000, 0755, "/system/bin/mkfs.f2fs");
set_perm(0, 2000, 0755, "/system/bin/fibmap.f2fs");

ui_print("Extract old kernel...");
run_program("/sbin/busybox", "dd", "if=/dev/block/mmcblk0p21", "of=/tmp/boot.img");
set_progress(0.5);

ui_print("Extract ramdisk...");
run_program("/tmp/unpackbootimg", "-i", "/tmp/boot.img", "-o", "/tmp/");
set_progress(0.65);

ui_print("Fixing your ramdisk...");
ui_print("looking for busybox...");
ui_print("adding init.d support (if not already supported)...");
ui_print("Fixing fstab for any f2fs formated drives...");
run_program("/tmp/edit_ramdisk.sh");
set_progress(0.7);

ui_print("Making new boot.img...");
run_program("/tmp/mkbootimg.sh");
set_progress(0.9);

ui_print("Flashing new boot.img...");
run_program("/sbin/busybox", "dd", "if=/tmp/newboot.img", "of=/dev/block/mmcblk0p21");

ui_print("Cleaning up files...");
delete("/tmp/*");

ui_print("");
ui_print("fstab conversion complete");
ui_print("");
ui_print("Please reboot");
endif;
##########################End of AROMA##########################
set_progress(0.6);
ui_print("@Recovery Installed");
###########################Unmounting###########################
set_progress(1.0);
ui_print("Done!!!!");
ui_print("Install complete");